/*
给定一个字符串和一个整数 k，你需要对从字符串开头算起的每个 2k 个字符的前k个字符进行反转。
如果剩余少于 k 个字符，则将剩余的所有全部反转。
如果有小于 2k 但大于或等于 k 个字符，则反转前 k 个字符，并将剩余的字符保持原样。

要求:
该字符串只包含小写的英文字母。
给定字符串的长度和 k 在[1, 10000]范围内。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reverse-string-ii
*/

class Solution {
    public String reverseStr(String s, int k) {
        int temp = 0;
        StringBuilder str = new StringBuilder(s);
        if (str.length() < 2 * k) {
        //第一种情况,k<=字符数量<2*k ，反转前k个字符
            int left = 0;
            int right = k - 1;
            if (str.length() < k) {
                right = str.length() - 1;
            }
            while (left < right) {
                //此时进行前k个字符的反转,也就是交换left位置和right
                char c = str.charAt(left);
                str.setCharAt(left, str.charAt(right));
                str.setCharAt(right, c);
                ++left;
                --right;
            }// end while
        } else {
        //第二种情况,字符数量>=2*k
            for (int i = 0; i <= str.length() / (2 * k); i++) {
                int left = temp;
                int right = left + k - 1;
                if (right >= str.length()) {
                    right = str.length() - 1;
                }
                while (left < right) {
                    char c = str.charAt(left);
                    str.setCharAt(left, str.charAt(right));
                    str.setCharAt(right, c);
                    ++left;
                    --right;
                }//end while
                temp += (2 * k);
            }//end for
        } 
        return str.toString();
    }
}
