/*
给定一组字符，使用原地算法将其压缩。

压缩后的长度必须始终小于或等于原数组长度。

数组的每个元素应该是长度为1 的字符（不是 int 整数类型）。

在完成原地修改输入数组后，返回数组的新长度。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/string-compression
*/

class Solution {
    public int compress(char[] chars) {
        //letter记录每个字母的位置
        //write表示重新写入的位置
        int letter = 0, write = 0;
        for (int read = 0; read < chars.length; read++) {
            if (read == chars.length - 1 || chars[read] != chars[read + 1]) {
                chars[write] = chars[letter];
                write++;
                if (read > letter) {
                    for (char c : ("" + (read - letter + 1)).toCharArray()) {
                        chars[write] = c;
                        write++;
                    }
                }
                letter = read + 1;
            }
        }
        return write;
    }
}
