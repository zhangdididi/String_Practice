/*
给定一个字符串，你需要反转字符串中每个单词的字符顺序，同时仍保留空格和单词的初始顺序。

示例 1:
输入: "Let's take LeetCode contest"
输出: "s'teL ekat edoCteeL tsetnoc" 
注意：在字符串中，每个单词由单个空格分隔，并且字符串中不会有任何额外的空格。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reverse-words-in-a-string-iii
*/
class Solution {
    public String reverseWords(String s) {
        //创建一个StringBuilder字符串
        StringBuilder res = new StringBuilder();
        //从后往前遍历s,遇到空格就插入一个
        int begin = 0;
        int end = 0;
        while (begin != s.length() + 1) {
            while (end != s.length() && s.charAt(end) != ' ') {
                end++;
            }
            //循环结束,end指向空格的位置
            for (int i = end - 1; i >= begin; i--) {
                res.append(s.charAt(i));
            }
            //循环结束,第一个单词已经逆置放在res中,此时需要增加一个空格
            //让begin指向end的位置
            end++;
            begin = end;
            if (end != s.length() + 1) {
                res.append(' ');
            }
        } 
        return res.toString();
    }
}
